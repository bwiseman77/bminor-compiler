-------------------------------------------
           token type  text
-------------------------------------------
               IDENT  intFunction
               COLON  :
            FUNCTION  function
             INTEGER  integer
        LEFT_PARENTH  (
               IDENT  intVar
               COLON  :
             INTEGER  integer
               COMMA  ,
               IDENT  boolVar
               COLON  :
             BOOLEAN  boolean
       RIGHT_PARENTH  )
        LEFT_BRACKET  {
                  IF  if
        LEFT_PARENTH  (
               IDENT  boolVar
       RIGHT_PARENTH  )
        LEFT_BRACKET  {
               IDENT  intVar
              ASSIGN  =
               IDENT  intVar
      MULTIPLICATION  *
     INTEGER_LITERAL  2
           SEMICOLON  ;
       RIGHT_BRACKET  }
              RETURN  return
               IDENT  intVar
           SEMICOLON  ;
       RIGHT_BRACKET  }
 SINGLE_LINE_COMMENT  // finds the largest value in the array
               IDENT  getLargest
               COLON  :
            FUNCTION  function
             INTEGER  integer
        LEFT_PARENTH  (
               IDENT  intArrVar
               COLON  :
               ARRAY  array
 LEFT_SQUARE_BRACKET  [
RIGHT_SQUARE_BRACKET  ]
             INTEGER  integer
               COMMA  ,
               IDENT  int
               IDENT  len
       RIGHT_PARENTH  )
              ASSIGN  =
        LEFT_BRACKET  {
               IDENT  largest
               COLON  :
             INTEGER  integer
              ASSIGN  =
     INTEGER_LITERAL  0
           SEMICOLON  ;
               IDENT  x
               COLON  :
             INTEGER  integer
           SEMICOLON  ;
                 FOR  for
        LEFT_PARENTH  (
               IDENT  x
              ASSIGN  =
     INTEGER_LITERAL  0
           SEMICOLON  ;
               IDENT  x
                  LT  <
               IDENT  len
           SEMICOLON  ;
               IDENT  x
           INCREMENT  ++
       RIGHT_PARENTH  )
        LEFT_BRACKET  {
                  IF  if
        LEFT_PARENTH  (
               IDENT  intArrVar
 LEFT_SQUARE_BRACKET  [
               IDENT  x
RIGHT_SQUARE_BRACKET  ]
                  GT  >
               IDENT  largest
       RIGHT_PARENTH  )
        LEFT_BRACKET  {
               IDENT  largest
              ASSIGN  =
               IDENT  intArrVar
 LEFT_SQUARE_BRACKET  [
               IDENT  x
RIGHT_SQUARE_BRACKET  ]
           SEMICOLON  ;
       RIGHT_BRACKET  }
       RIGHT_BRACKET  }
              RETURN  return
               IDENT  largest
           SEMICOLON  ;
       RIGHT_BRACKET  }
               IDENT  main
               COLON  :
            FUNCTION  function
             INTEGER  integer
        LEFT_PARENTH  (
               IDENT  argc
               COLON  :
             INTEGER  integer
               COMMA  ,
               IDENT  argv
               COLON  :
               ARRAY  array
 LEFT_SQUARE_BRACKET  [
RIGHT_SQUARE_BRACKET  ]
              STRING  string
       RIGHT_PARENTH  )
              ASSIGN  =
        LEFT_BRACKET  {
               IDENT  b
               COLON  :
               ARRAY  array
 LEFT_SQUARE_BRACKET  [
     INTEGER_LITERAL  10
RIGHT_SQUARE_BRACKET  ]
             INTEGER  integer
              ASSIGN  =
        LEFT_BRACKET  {
     INTEGER_LITERAL  0
               COMMA  ,
     INTEGER_LITERAL  1
               COMMA  ,
     INTEGER_LITERAL  2
               COMMA  ,
     INTEGER_LITERAL  3
               COMMA  ,
     INTEGER_LITERAL  4
               COMMA  ,
     INTEGER_LITERAL  5
       RIGHT_BRACKET  }
           SEMICOLON  ;
               IDENT  b
 LEFT_SQUARE_BRACKET  [
     INTEGER_LITERAL  4
RIGHT_SQUARE_BRACKET  ]
              ASSIGN  =
     INTEGER_LITERAL  6
           SEMICOLON  ;
               IDENT  i
               COLON  :
             INTEGER  integer
           SEMICOLON  ;
               IDENT  z
               COLON  :
             INTEGER  integer
              ASSIGN  =
               IDENT  intFunction
        LEFT_PARENTH  (
               IDENT  i
               COMMA  ,
                TRUE  true
       RIGHT_PARENTH  )
           SEMICOLON  ;
               PRINT  print
               IDENT  intArrFunction
        LEFT_PARENTH  (
               IDENT  v
               COMMA  ,
               IDENT  z
       RIGHT_PARENTH  )
           SEMICOLON  ;
       RIGHT_BRACKET  }
